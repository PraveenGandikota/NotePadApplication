{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Naveen\\\\Desktop\\\\notepadappliication\\\\src\\\\components\\\\Note.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport { noteContext } from \"../context/noteContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Note = ({\n  text,\n  date,\n  id\n}) => {\n  _s();\n  const {\n    deleteNote,\n    updateNote\n  } = useContext(noteContext);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editText, setEditText] = useState(text);\n  const formatDate = () => {\n    const d = new Date(date);\n    const hours = d.getHours();\n    const minutes = d.getMinutes();\n    const ampm = hours >= 12 ? 'PM' : 'AM';\n    const formattedHours = hours % 12 || 12;\n    const formattedMinutes = minutes < 10 ? `0${minutes}` : minutes;\n    return `${d.getDate()}-${d.getMonth() + 1}-${d.getFullYear()} ${formattedHours}:${formattedMinutes}${ampm}`;\n  };\n  const handleEdit = () => {\n    if (isEditing) {\n      updateNote(id, editText);\n    }\n    setIsEditing(!isEditing);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text\",\n      children: isEditing ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: editText,\n        onChange: e => setEditText(e.target.value),\n        cols: 50,\n        rows: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this) : text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date\",\n        children: formatDate()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: handleEdit,\n        children: isEditing ? 'Save' : 'Edit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => deleteNote(id),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-trash\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(Note, \"JurLi9CxtfLSc7RQwPCaZN9FJhU=\");\n_c = Note;\nexport default Note;\nvar _c;\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["React","useContext","useState","noteContext","jsxDEV","_jsxDEV","Note","text","date","id","_s","deleteNote","updateNote","isEditing","setIsEditing","editText","setEditText","formatDate","d","Date","hours","getHours","minutes","getMinutes","ampm","formattedHours","formattedMinutes","getDate","getMonth","getFullYear","handleEdit","className","children","value","onChange","e","target","cols","rows","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Naveen/Desktop/notepadappliication/src/components/Note.jsx"],"sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { noteContext } from \"../context/noteContext\";\r\n\r\nconst Note = ({ text, date, id }) => {\r\n    const { deleteNote, updateNote } = useContext(noteContext);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [editText, setEditText] = useState(text);\r\n\r\n    const formatDate = () => {\r\n        const d = new Date(date);\r\n        const hours = d.getHours();\r\n        const minutes = d.getMinutes();\r\n        const ampm = hours >= 12 ? 'PM' : 'AM';\r\n        const formattedHours = hours % 12 || 12;\r\n        const formattedMinutes = minutes < 10 ? `0${minutes}` : minutes;\r\n        return `${d.getDate()}-${d.getMonth() + 1}-${d.getFullYear()} ${formattedHours}:${formattedMinutes}${ampm}`;\r\n    };\r\n\r\n    const handleEdit = () => {\r\n        if (isEditing) {\r\n            updateNote(id, editText); \r\n        }\r\n        setIsEditing(!isEditing);\r\n    };\r\n\r\n    return (\r\n        <div className=\"note\">\r\n            <div className=\"text\">\r\n                {isEditing ? (\r\n                    <textarea\r\n                        value={editText}\r\n                        onChange={(e) => setEditText(e.target.value)}\r\n                        cols={50}\r\n                        rows={3}\r\n                    />\r\n                ) : (\r\n                    text\r\n                )}\r\n            </div>\r\n            <div className=\"footer\">\r\n                <div className=\"date\">{formatDate()}</div>\r\n                <button className=\"btn\" onClick={handleEdit}>\r\n                    {isEditing ? 'Save' : 'Edit'}\r\n                </button>\r\n                <button className=\"btn\" onClick={() => deleteNote(id)}>\r\n                    <i className=\"fa-solid fa-trash\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Note;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}